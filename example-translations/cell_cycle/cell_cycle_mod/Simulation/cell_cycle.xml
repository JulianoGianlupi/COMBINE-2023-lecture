<CompuCell3D>
<!--
******************************************************************************************
PLEASE READ BEFORE RUNNING:
The translator program does a lot of the conversion process of a Physicell simulation into
a CompuCell3D simulation. However, just as in CC3D, the user can define several custom modules
functions, and initial conditions for their PhysiCell model. Translating custom c++ code is
beyond what an automated program can do (AI-ML language models not withstanding). On top
of that fact there are several PhysiCell concepts that do not exist in CC3D, and vice-versa.
Therefore: 1. please read *all comments* the script has placed in the converted files.
2. You are responsible for creating the initial conditions. Some are defined in csv files
others are creating with c++.
3. You are responsible for finding where <user_parameters> is used in the Physicell model,
and using it in the CC3D model
4. You are responsible for using chemical field data (e.g., chemotaxis)
5. You are responsible for defining the use of custom_data for each cell type. Find where 
it is used in PhysiCell and define its use in the CC3D simulation
******************************************************************************************
-->

<Metadata>
  <!-- Basic properties simulation -->
  <NumberOfProcessors>1</NumberOfProcessors>
  <DebugOutputFrequency>100</DebugOutputFrequency>
  <!-- <NonParallelModule Name="Potts"/> -->
</Metadata>
 
<Potts>
   <!-- Basic properties of CPM (GGH) algorithm -->
   <Space_Units>1 pixel = 0.05 micron</Space_Units>
   <Pixel_to_Space units="pixel/micron" id = "pixel_to_space">10</Pixel_to_Space>
   <Dimensions x="150" y="150" z="1"/>
   <Time_Units>1 MCS = 10.0 min</Time_Units>
   <MCS_to_Time units="MCS/min" id = "mcs_to_time">0.02</MCS_to_Time>
   <Steps>14400</Steps>
   <!-- As the frameworks of CC3D and PhysiCell are very different -->
   <!-- PC doesn't have some concepts that CC3D does. Temperature is one of -->
   <!-- them, so the translation script leaves its tunning as an exercise-->
   <!-- for the reader -->
   <Temperature>10.0</Temperature>
   <!-- Same deal for neighbor order as for temperature-->
   <NeighborOrder>1</NeighborOrder>
   <!-- <Boundary_x>Periodic</Boundary_x> -->
   <!-- <Boundary_y>Periodic</Boundary_y> -->
</Potts>

<Plugin Name="CellType">
	<CellType TypeId="0" TypeName="Medium"/>
	<CellType TypeId="1" TypeName="CELL"/>
</Plugin>
<Plugin Name="Volume"/>

<Plugin Name="Contact">
	<!-- PhysiCell doesn't have an equivalent to this plugin. Its  -->
	<!-- tunning and deciding on the neighbor order is left as an -->
	<!-- exerise to the reader. -->
	<!-- A better option (to be implemented) is to use the adhesion flex -->
	<!-- Specification of adhesion energies -->
	<Energy Type1="Medium" Type2="Medium">10.0</Energy>
	<Energy Type1="Medium" Type2="CELL">5.0</Energy>
	<Energy Type1="CELL" Type2="CELL">5.0</Energy>
	<NeighborOrder>3</NeighborOrder>
</Plugin>



</CompuCell3D>
